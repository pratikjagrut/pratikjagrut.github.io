<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pratik Jagrut</title>
    <link>https://pratikjagrut.dev/</link>
    <description>Recent content on Pratik Jagrut</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 20 Dec 2020 19:30:37 +0530</lastBuildDate><atom:link href="https://pratikjagrut.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Index</title>
      <link>https://pratikjagrut.dev/blog/golang/contents/</link>
      <pubDate>Sun, 20 Dec 2020 19:30:37 +0530</pubDate>
      
      <guid>https://pratikjagrut.dev/blog/golang/contents/</guid>
      <description>Contents Github Repo   &amp;emsp; &amp;#128279; Reference     Introduction and Installation  &amp;emsp;   First program in Go: Hello World  &amp;emsp;   Variables, data types and constants  &amp;emsp;  </description>
    </item>
    
    <item>
      <title>Variables, data types and constants</title>
      <link>https://pratikjagrut.dev/blog/golang/vdc/</link>
      <pubDate>Sun, 20 Dec 2020 18:34:48 +0530</pubDate>
      
      <guid>https://pratikjagrut.dev/blog/golang/vdc/</guid>
      <description>Variable Variable is a symbolic name given to the storage location which contains some value which can be changed at any time during the execution of the program. A variable must be defined with the type of data or value it is holding.
Data types There are several data types in Go.
bool int uint float32 complex64 string int8 uint8 float64 complex128 byte int16 uint16 rune int32 uint32 error int64 uint64 Zero value In some programming languages variable holds a null or undefined value when not initialized, Go gives it a zero-value of its data type.</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://pratikjagrut.dev/blog/golang/helloworld/</link>
      <pubDate>Sat, 19 Dec 2020 21:48:51 +0530</pubDate>
      
      <guid>https://pratikjagrut.dev/blog/golang/helloworld/</guid>
      <description>Classic hello world program First thing, packages In Go, source files are organized into system directories called packages, which enable code reusability. When you build reusable pieces of code, you will develop a package as a shared library. But when you develop executable programs, you will use the package main for making the package as an executable program. The package main tells the Go compiler that the package should compile as an executable program instead of a shared library.</description>
    </item>
    
    <item>
      <title>Go Introduction and Installation</title>
      <link>https://pratikjagrut.dev/blog/golang/introduction/</link>
      <pubDate>Sat, 19 Dec 2020 17:23:49 +0530</pubDate>
      
      <guid>https://pratikjagrut.dev/blog/golang/introduction/</guid>
      <description>Go is an open-source, statically typed, compiled programing language built by Google. It combines the simplest of both statically typed and dynamically typed languages and provides you with the proper mixture of efficiency and simple programming. It is primarily fitted to building fast, efficient, and reliable server-side or system applications.
Following are some noted features of Go -
 Safety Concurrency Efficient Garbage Collection High-speed compilation Excellent Tooling support  Installing GO Go binary distributions are available for all major operating systems like Linux, Windows, and macOS.</description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>https://pratikjagrut.dev/resume/</link>
      <pubDate>Sat, 12 Dec 2020 12:21:16 +0530</pubDate>
      
      <guid>https://pratikjagrut.dev/resume/</guid>
      <description>PRATIK JAGRUT Bangalore, India  A computer science engineer, an open-source enthusiast and tech speaker with a passion for programming, eager to learn new technologies and desire to work in an environment which encourages learning. I&amp;rsquo;m a goal-oriented individual with a pleasant personality and a tenacity that knows no bounds.
 Experience   Red Hat / ​ Associate Software Engineer January 2019 - present, Bangalore, India  Working on a project called ​Service Binding Operator  which is an open source project.</description>
    </item>
    
    <item>
      <title>About Pratik</title>
      <link>https://pratikjagrut.dev/about/</link>
      <pubDate>Sat, 12 Dec 2020 12:02:44 +0530</pubDate>
      
      <guid>https://pratikjagrut.dev/about/</guid>
      <description>Pratik currently works at Red Hat as Associate Software Engineer since January 2019. He joined Red Hat as an intern just after graduating in 2018. He holds a Bachelor of Engineering degree in Computer Science.
Pratik is enthusiastic about Linux and opensource technologies. He&amp;rsquo;s fueled by his passion for understanding new technologies. He considers himself a ‘forever student&#39;, eager to learn, grow and build his professional and personal life.
Pratik is also very enamoured of outdoor activities.</description>
    </item>
    
  </channel>
</rss>
